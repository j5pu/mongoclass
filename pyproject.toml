[project]
name = "python-mongoclass"
description = "mongoclass"
dynamic = ["version"]
license = { text = "MIT" }
requires-python = ">=3.10"
dependencies = [
    "dnspython >= 2.2.1, <3",
    "mongita >= 1.1.1, <2"
]
[project.optional-dependencies]
dev = [
    "black",
    "icecream",
    "ipython",
    "ipython-suggestions",
    "restmagic",
    "mypy",
    "pip-tools",
    "pyflyby",
    "python-semantic-release",
    "twine",
    "vendorize"
]
docs = [
    "docutils",
    "sphinx",
    "sphinx-click",
    "sphinx-rtd-theme",
    "sphinxcontrib-napoleon"
]
tests = [
    "coverage[toml] >=6, <7",
    "darglint >=1.8.1, <2",
    "pydocstyle >=6.3, <7",
    "pytest >=7, <8",
    "pytest-asyncio >=0.21.1, <1",
    "pytest-cov >=4, <5",
    "pytest-doctestplus >=0.13, <1",
    "pytest-mock >=3, <4",
    "pytest-xdist >=2, <3",
    "pytest-remotedata >=0.4.0, <1",
    "pytest-lazy-fixture ~=0.6.3",
    "pytest-sugar >=0.9.7, <1",
    "responses==0.21.0",
    "requests-mock >=1.10.0, <2",
    "ruff >=0.0.282, <0.1",
    "tox >=4.6.4, <5",
    "types-pytest-lazy-fixture >=0.6.3.3",
]
[project.scripts]
pth = "sitec.cli:pth"
requirements = "sitec.cli:requirements"
sitec = "sitec.cli:app"

[tool.setuptools]
packages = ["mongoclass"]  # ["."] by default

[tool.setuptools_scm]

[build-system]
requires = ['setuptools', 'setuptools_scm>=6.2', 'wheel']
build-backend = 'setuptools.build_meta'

[tool.pytest.ini_options] # https://docs.pytest.org/en/stable/reference/reference.html#ini-options-ref

## doctest
# https://docs.python.org/3/library/doctest.html
#addopts = [
#    '--doctest-continue-on-failure',
#    '--doctest-ellipsis',
#    '--doctest-modules',
#    '--doctest-normalize-whitespace',
#    '--doctest-report=ndiff'
#]
#doctest_optionflags = [
#    "ALLOW_UNICODE", #
#    "ALLOW_BYTES",
#    "NUMBER",
#    'IGNORE_EXCEPTION_DETAIL',
#]

## pytest-doctestplus
# https://github.com/scientific-python/pytest-doctestplus
# To do this, add 'pytest_doctestplus.sphinx.doctestplus' to your extensions list in your conf.py file
#addopts = [
#    "--doctest-plus",
#    "--doctest-rst",
#    "--doctest-ufunc",
#    "--remote-data",
#]
#doctest_optionflags = [
#    "ELLIPSIS",
#    "FLOAT_CMP",
#    'IGNORE_EXCEPTION_DETAIL',
#    "IGNORE_WARNINGS",
#    "NORMALIZE_WHITESPACE"
#]
#doctest_plus = "enabled"


# Sybil
# https://sybil.readthedocs.io/en/latest/quickstart.html
# addopts = -p no:doctest

addopts = [
    "--doctest-plus",
    "--doctest-rst",
    "--doctest-ufunc",
    "--remote-data",
    '--full-trace',
    '--ignore-glob=*/backup/*',
    '--ignore-glob=*.sh',
    '--ignore-glob=*/test/*',
    '--ignore-glob=*/tmp/*',
    "-nauto", # pytest-xdist
    '--showlocals',
    '--strict-markers',
    '--tb=long',
    '-rA', # “-r: short test summary info”, "-A: for all status.
    '--verbosity=4',
]
asyncio_mode = "auto"
console_output_style = "progress-even-when-capture-no"
doctest_plus = "enabled" # https://github.com/scientific-python/pytest-doctestplus
doctest_optionflags = [
    "ELLIPSIS",
    "FLOAT_CMP",
    'IGNORE_EXCEPTION_DETAIL',
    "IGNORE_WARNINGS",
    "NORMALIZE_WHITESPACE"
]
log_level = 'ERROR'
norecursedirs = [
    '*.egg', '.eggs', 'dist', 'build', 'docs', '.tox', '.git', '__pycache__', 'backup', 'scripts',
    'templates', 'venv'
]
python_files = 'test_*.py'
testpaths = [
    "src",
    "tests",
]

[tool.semantic_release]
#assets = []
build_command = "python3 -m build --wheel"
#commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
#logging_use_named_masks = false
#major_on_zero = true
tag_format = "{version}"
version_variables = ["src/sitec/__version__.py:__version__"]

#[tool.semantic_release.branches.main]
#match = "(main|master)"
#prerelease = false
#prerelease_token = "rc"

#[tool.semantic_release.changelog]
#template_dir = "templates"
#changelog_file = "CHANGELOG.md"
#exclude_commit_patterns = []

#[tool.semantic_release.changelog.environment]
#block_start_string = "{%"
#block_end_string = "%}"
#variable_start_string = "{{"
#variable_end_string = "}}"
#comment_start_string = "{#"
#comment_end_string = "#}"
#trim_blocks = false
#lstrip_blocks = false
#newline_sequence = "\n"
#keep_trailing_newline = false
#extensions = []
#autoescape = true

#[tool.semantic_release.commit_author]
#env = "GIT_COMMIT_AUTHOR"
#default = "semantic-release <semantic-release>"

#[tool.semantic_release.commit_parser_options]
#allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
#minor_tags = ["feat"]
#patch_tags = ["fix", "perf"]

#[tool.semantic_release.remote]
#name = "origin"
#type = "github"
#ignore_token_for_push = false

#[tool.semantic_release.remote.token]
#env = "GH_TOKEN"

#[tool.semantic_release.publish]
#dist_glob_patterns = ["dist/*"]
#upload_to_vcs_release = true
