exclude = ["docs", "tests"]
include = ["src/**"]
fix = true
ignore-init-module-imports = true
ignore = [
    "C901", # is too complex
    "E741", # Ambiguous variable name: `l`
    "F403", # `from module import *` used; unable to detect undefined names
    "N805", # First argument of a method should be named `self`
    "PLR0913", # Too many arguments to function call (6 > 5)
    "PLW1510", # `subprocess.run` without explicit `check` argument
    "S602", # `subprocess` call with `shell=True` identified, security issue
    "S603", # `subprocess` call: check for execution of untrusted input
    "S607", # Starting a process with a partial executable path
    "SLF001", # Access to protected
    "T201", # `print` found
    "TID252", # relative imports
    "TRY003", # long messages outside the exception class
    "W505", # Doc line too long (102 > 100 characters)
]
line-length = 120

select = [
    # flake8-builtins
    "A",
    "ASYNC",
    # flake8-bugbear
    "B",
    "BLE",
    # flake8-comprehensions
    "C4",
    # mccabe
    "C90",
    "D",
    "DTZ",
    # flake8-2020
    "E",
    "EM",
    "ERA",
    # pycodestyle
    "F",
    "FLY",
    "G",
    # isort
    "I",
    "ICN",
    "INP",
    "ISC",
    "N",
    "NPY",
    # pygrep-hooks
    "PGH",
    "PIE",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "PT",
    "PTH",
    "PYI",
    "RET",
    "RSE",
    # ruff
    "RUF",
    # flake8-bandit
    "S",
    # flake8-simplify
    "SIM",
    "SLF",
    # flake8-debugger
    "T10",
    "T20",
    "TCH",
    "TID",
    # tryceratops
    "TRY",
    # pyupgrade
    "UP",
    # flake8-2020
    "W",
    # pyflakes
    "YTT",
]
src = ["src"]
target-version = "py311"
unfixable = [
    "T201", # `print` found
]

[per-file-ignores]
"src/nodeps/nodeps.pth" = [
    "D100",  # Missing docstring in public module
    "I001",  # Import block is un-sorted or un-formatted
    "E702",  # Multiple statements on one line (semicolon)
]

[flake8-tidy-imports]
ban-relative-imports = "all"

[pycodestyle]
max-doc-length = 100

[pydocstyle]
convention = "google"
